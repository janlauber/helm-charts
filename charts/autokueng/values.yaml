# Default values for autokueng.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullSecrets: []

frontend:
  replicaCount: 1
  nodeSelector: {}
  affinity: {}
  tolerations: []
  image:
    repository: ghcr.io/janlauber/autokueng-frontend
    tag: v0.1.2
    pullPolicy: IfNotPresent
  ports:
    - "3000:3000"
  env:
    - "NODE_ENV=production"
  restart: always
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  env: []
  service:
    type: ClusterIP
    port: 3000
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
    - host: autokueng.ch
      paths:
        - path: /
          pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - autokueng.ch
    

api:
  replicaCount: 1
  nodeSelector: {}
  affinity: {}
  tolerations: []
  db:
    host: ~ # Database Host url
    port: ~ # Database Port
  image:
    repository: ghcr.io/janlauber/autokueng-api
    tag: v0.1.0-beta
    pullPolicy: IfNotPresent
  ports:
    - "8000:8000"
  restart: always
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  service:
    type: ClusterIP
    port: 8000
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
    - host: autokueng.ch
      paths:
        - path: /
          pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - autokueng.ch

data:
  replicaCount: 1
  nodeSelector: {}
  affinity: {}
  tolerations: []
  image:
    repository: ghcr.io/janlauber/autokueng-data
    tag: v0.1.1
    pullPolicy: IfNotPresent
  ports:
    - "9000:9000"
  restart: always
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  service:
    type: ClusterIP
    port: 9000
  storageClassName: standard
  storage: 10Gi
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
    - host: autokueng.ch
      paths:
        - path: /
          pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - autokueng.ch

postgres:
  image:
    repository: postgres
    tag: latest
  ports:
    - "5432:5432"
  env:
    - "POSTGRES_USER=autokueng"
    - "POSTGRES_PASSWORD=autokueng"
    - "POSTGRES_DB=autokueng"
  volumes:
    - "./data-api/postgres:/var/lib/postgresql/data"
  restart: always
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi



serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000